{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { api } from '../services/api';\nexport const usePrices = (stocks = [], watchlist = []) => {\n  _s();\n  const [prices, setPrices] = useState([]);\n  const [currentPrices, setCurrentPrices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const fetchMarqueePrices = useCallback(async () => {\n    try {\n      const symbols = ['AAPL', 'GOOGL', 'MSFT', 'TSLA'];\n      const pricePromises = symbols.map(async symbol => {\n        try {\n          const price = await api.getCurrentPrice(symbol);\n          return {\n            symbol,\n            price: price.toFixed(2),\n            change: (Math.random() - 0.5) * 4\n          };\n        } catch (error) {\n          return {\n            symbol,\n            price: (Math.random() * 200).toFixed(2),\n            change: (Math.random() - 0.5) * 4\n          };\n        }\n      });\n      const pricesData = await Promise.all(pricePromises);\n      setPrices(pricesData);\n    } catch (error) {\n      console.error('Error fetching marquee prices:', error);\n    }\n  }, []);\n  const fetchCurrentPrices = useCallback(async () => {\n    try {\n      setLoading(true);\n      const allSymbols = [...new Set([...stocks.map(s => s.stockTicker), ...watchlist.map(w => w.stockTicker)])];\n      if (allSymbols.length === 0) {\n        setLoading(false);\n        return;\n      }\n      const pricePromises = allSymbols.map(async symbol => {\n        try {\n          const price = await api.getCurrentPrice(symbol);\n          return {\n            symbol,\n            price\n          };\n        } catch (error) {\n          return {\n            symbol,\n            price: Math.random() * 200\n          };\n        }\n      });\n      const pricesData = await Promise.all(pricePromises);\n      const pricesMap = {};\n      pricesData.forEach(({\n        symbol,\n        price\n      }) => {\n        pricesMap[symbol] = price;\n      });\n      setCurrentPrices(pricesMap);\n    } catch (error) {\n      console.error('Error fetching current prices:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [stocks, watchlist]);\n  useEffect(() => {\n    fetchMarqueePrices();\n    fetchCurrentPrices();\n    const interval = setInterval(() => {\n      fetchMarqueePrices();\n      fetchCurrentPrices();\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [fetchMarqueePrices, fetchCurrentPrices]);\n  return {\n    prices,\n    currentPrices,\n    loading\n  };\n};\n_s(usePrices, \"ogaSvnFWQb/ySnSYFSKY/9Jc8Ug=\");","map":{"version":3,"names":["useState","useEffect","useCallback","api","usePrices","stocks","watchlist","_s","prices","setPrices","currentPrices","setCurrentPrices","loading","setLoading","fetchMarqueePrices","symbols","pricePromises","map","symbol","price","getCurrentPrice","toFixed","change","Math","random","error","pricesData","Promise","all","console","fetchCurrentPrices","allSymbols","Set","s","stockTicker","w","length","pricesMap","forEach","interval","setInterval","clearInterval"],"sources":["C:/Citi/trading-app/trading-app/src/hooks/usePrices.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { api } from '../services/api';\r\n\r\nexport const usePrices = (stocks = [], watchlist = []) => {\r\n  const [prices, setPrices] = useState([]);\r\n  const [currentPrices, setCurrentPrices] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchMarqueePrices = useCallback(async () => {\r\n    try {\r\n      const symbols = ['AAPL', 'GOOGL', 'MSFT', 'TSLA'];\r\n      const pricePromises = symbols.map(async (symbol) => {\r\n        try {\r\n          const price = await api.getCurrentPrice(symbol);\r\n          return {\r\n            symbol,\r\n            price: price.toFixed(2),\r\n            change: (Math.random() - 0.5) * 4\r\n          };\r\n        } catch (error) {\r\n          return {\r\n            symbol,\r\n            price: (Math.random() * 200).toFixed(2),\r\n            change: (Math.random() - 0.5) * 4\r\n          };\r\n        }\r\n      });\r\n      \r\n      const pricesData = await Promise.all(pricePromises);\r\n      setPrices(pricesData);\r\n    } catch (error) {\r\n      console.error('Error fetching marquee prices:', error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchCurrentPrices = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const allSymbols = [...new Set([\r\n        ...stocks.map(s => s.stockTicker),\r\n        ...watchlist.map(w => w.stockTicker)\r\n      ])];\r\n      \r\n      if (allSymbols.length === 0) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const pricePromises = allSymbols.map(async (symbol) => {\r\n        try {\r\n          const price = await api.getCurrentPrice(symbol);\r\n          return { symbol, price };\r\n        } catch (error) {\r\n          return { symbol, price: Math.random() * 200 };\r\n        }\r\n      });\r\n      \r\n      const pricesData = await Promise.all(pricePromises);\r\n      const pricesMap = {};\r\n      pricesData.forEach(({ symbol, price }) => {\r\n        pricesMap[symbol] = price;\r\n      });\r\n      setCurrentPrices(pricesMap);\r\n    } catch (error) {\r\n      console.error('Error fetching current prices:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [stocks, watchlist]);\r\n\r\n  useEffect(() => {\r\n    fetchMarqueePrices();\r\n    fetchCurrentPrices();\r\n\r\n    const interval = setInterval(() => {\r\n      fetchMarqueePrices();\r\n      fetchCurrentPrices();\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [fetchMarqueePrices, fetchCurrentPrices]);\r\n\r\n  return {\r\n    prices,\r\n    currentPrices,\r\n    loading\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}