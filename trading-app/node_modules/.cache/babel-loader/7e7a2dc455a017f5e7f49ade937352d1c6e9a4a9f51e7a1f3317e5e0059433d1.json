{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { api } from '../services/api';\nexport const useStocks = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [watchlist, setWatchlist] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchStocks = useCallback(async () => {\n    try {\n      setLoading(true);\n      const [boughtStocks, watchlistData, ordersData] = await Promise.all([api.getBoughtStocks(), api.getWatchlist(), api.getOrderHistory()]);\n      setStocks(boughtStocks);\n      setWatchlist(watchlistData);\n      setOrders(ordersData);\n    } catch (error) {\n      console.error('Error fetching stocks:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const buyStock = useCallback(async (ticker, units) => {\n    try {\n      await api.buyStock(ticker, units);\n      await fetchStocks();\n    } catch (error) {\n      console.error('Error buying stock:', error);\n      throw error;\n    }\n  }, [fetchStocks]);\n  const sellStock = useCallback(async (ticker, units) => {\n    try {\n      await api.sellStock(ticker, units);\n      await fetchStocks();\n    } catch (error) {\n      console.error('Error selling stock:', error);\n      throw error;\n    }\n  }, [fetchStocks]);\n  useEffect(() => {\n    fetchStocks();\n  }, [fetchStocks]);\n  return {\n    stocks,\n    watchlist,\n    orders,\n    loading,\n    buyStock,\n    sellStock,\n    refreshStocks: fetchStocks\n  };\n};\n_s(useStocks, \"+EbgnMv46dqeavrbV7TZgB7w3WY=\");","map":{"version":3,"names":["useState","useEffect","useCallback","api","useStocks","_s","stocks","setStocks","watchlist","setWatchlist","orders","setOrders","loading","setLoading","fetchStocks","boughtStocks","watchlistData","ordersData","Promise","all","getBoughtStocks","getWatchlist","getOrderHistory","error","console","buyStock","ticker","units","sellStock","refreshStocks"],"sources":["C:/Citi/trading-app/trading-app/src/hooks/useStocks.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { api } from '../services/api';\r\n\r\nexport const useStocks = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [watchlist, setWatchlist] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchStocks = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [boughtStocks, watchlistData, ordersData] = await Promise.all([\r\n        api.getBoughtStocks(),\r\n        api.getWatchlist(),\r\n        api.getOrderHistory()\r\n      ]);\r\n      \r\n      setStocks(boughtStocks);\r\n      setWatchlist(watchlistData);\r\n      setOrders(ordersData);\r\n    } catch (error) {\r\n      console.error('Error fetching stocks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const buyStock = useCallback(async (ticker, units) => {\r\n    try {\r\n      await api.buyStock(ticker, units);\r\n      await fetchStocks();\r\n    } catch (error) {\r\n      console.error('Error buying stock:', error);\r\n      throw error;\r\n    }\r\n  }, [fetchStocks]);\r\n\r\n  const sellStock = useCallback(async (ticker, units) => {\r\n    try {\r\n      await api.sellStock(ticker, units);\r\n      await fetchStocks();\r\n    } catch (error) {\r\n      console.error('Error selling stock:', error);\r\n      throw error;\r\n    }\r\n  }, [fetchStocks]);\r\n\r\n  useEffect(() => {\r\n    fetchStocks();\r\n  }, [fetchStocks]);\r\n\r\n  return {\r\n    stocks,\r\n    watchlist,\r\n    orders,\r\n    loading,\r\n    buyStock,\r\n    sellStock,\r\n    refreshStocks: fetchStocks\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,GAAG,QAAQ,iBAAiB;AAErC,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,WAAW,GAAGZ,WAAW,CAAC,YAAY;IAC1C,IAAI;MACFW,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM,CAACE,YAAY,EAAEC,aAAa,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClEhB,GAAG,CAACiB,eAAe,CAAC,CAAC,EACrBjB,GAAG,CAACkB,YAAY,CAAC,CAAC,EAClBlB,GAAG,CAACmB,eAAe,CAAC,CAAC,CACtB,CAAC;MAEFf,SAAS,CAACQ,YAAY,CAAC;MACvBN,YAAY,CAACO,aAAa,CAAC;MAC3BL,SAAS,CAACM,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,QAAQ,GAAGvB,WAAW,CAAC,OAAOwB,MAAM,EAAEC,KAAK,KAAK;IACpD,IAAI;MACF,MAAMxB,GAAG,CAACsB,QAAQ,CAACC,MAAM,EAAEC,KAAK,CAAC;MACjC,MAAMb,WAAW,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjB,MAAMc,SAAS,GAAG1B,WAAW,CAAC,OAAOwB,MAAM,EAAEC,KAAK,KAAK;IACrD,IAAI;MACF,MAAMxB,GAAG,CAACyB,SAAS,CAACF,MAAM,EAAEC,KAAK,CAAC;MAClC,MAAMb,WAAW,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLR,MAAM;IACNE,SAAS;IACTE,MAAM;IACNE,OAAO;IACPa,QAAQ;IACRG,SAAS;IACTC,aAAa,EAAEf;EACjB,CAAC;AACH,CAAC;AAACT,EAAA,CA1DWD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}