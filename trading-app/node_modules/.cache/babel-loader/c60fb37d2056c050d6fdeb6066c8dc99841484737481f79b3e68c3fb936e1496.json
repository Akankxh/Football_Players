{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8080/api';\nclass ApiService {\n  constructor() {\n    // Stock endpoints\n    this.getAllStocks = () => this.request('/stocks/');\n    this.getWatchlist = () => this.request('/stocks/watchlist');\n    this.getBoughtStocks = () => this.request('/stocks/bought');\n    this.getWalletBalance = () => this.request('/stocks/wallet');\n    this.getCurrentPrice = symbol => this.request(`/stocks/price/${symbol}`);\n    this.getChartData = (symbol, period = '1d') => this.request(`/stocks/chart/${symbol}?period=${period}`);\n    this.rechargeWallet = amount => this.request(`/stocks/recharge?amount=${amount}`, {\n      method: 'POST'\n    });\n    this.buyStock = (ticker, units) => this.request(`/stocks/buy?ticker=${ticker}&units=${units}`, {\n      method: 'POST'\n    });\n    this.sellStock = (ticker, units) => this.request(`/stocks/sell?ticker=${ticker}&units=${units}`, {\n      method: 'POST'\n    });\n    // Order endpoints\n    this.getOrderHistory = () => this.request('/orders/history');\n  }\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed: ${endpoint}`, error);\n      throw error;\n    }\n  }\n}\nexport const api = new ApiService();","map":{"version":3,"names":["API_BASE_URL","ApiService","constructor","getAllStocks","request","getWatchlist","getBoughtStocks","getWalletBalance","getCurrentPrice","symbol","getChartData","period","rechargeWallet","amount","method","buyStock","ticker","units","sellStock","getOrderHistory","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","api"],"sources":["C:/Citi/trading-app/trading-app/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nclass ApiService {\r\n  async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`API request failed: ${endpoint}`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Stock endpoints\r\n  getAllStocks = () => this.request('/stocks/');\r\n  getWatchlist = () => this.request('/stocks/watchlist');\r\n  getBoughtStocks = () => this.request('/stocks/bought');\r\n  getWalletBalance = () => this.request('/stocks/wallet');\r\n  getCurrentPrice = (symbol) => this.request(`/stocks/price/${symbol}`);\r\n  getChartData = (symbol, period = '1d') => this.request(`/stocks/chart/${symbol}?period=${period}`);\r\n  \r\n  rechargeWallet = (amount) => this.request(`/stocks/recharge?amount=${amount}`, { method: 'POST' });\r\n  buyStock = (ticker, units) => this.request(`/stocks/buy?ticker=${ticker}&units=${units}`, { method: 'POST' });\r\n  sellStock = (ticker, units) => this.request(`/stocks/sell?ticker=${ticker}&units=${units}`, { method: 'POST' });\r\n  \r\n  // Order endpoints\r\n  getOrderHistory = () => this.request('/orders/history');\r\n}\r\n\r\nexport const api = new ApiService();"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,UAAU,CAAC;EAAAC,YAAA;IAuBf;IAAA,KACAC,YAAY,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC,UAAU,CAAC;IAAA,KAC7CC,YAAY,GAAG,MAAM,IAAI,CAACD,OAAO,CAAC,mBAAmB,CAAC;IAAA,KACtDE,eAAe,GAAG,MAAM,IAAI,CAACF,OAAO,CAAC,gBAAgB,CAAC;IAAA,KACtDG,gBAAgB,GAAG,MAAM,IAAI,CAACH,OAAO,CAAC,gBAAgB,CAAC;IAAA,KACvDI,eAAe,GAAIC,MAAM,IAAK,IAAI,CAACL,OAAO,CAAC,iBAAiBK,MAAM,EAAE,CAAC;IAAA,KACrEC,YAAY,GAAG,CAACD,MAAM,EAAEE,MAAM,GAAG,IAAI,KAAK,IAAI,CAACP,OAAO,CAAC,iBAAiBK,MAAM,WAAWE,MAAM,EAAE,CAAC;IAAA,KAElGC,cAAc,GAAIC,MAAM,IAAK,IAAI,CAACT,OAAO,CAAC,2BAA2BS,MAAM,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAO,CAAC,CAAC;IAAA,KAClGC,QAAQ,GAAG,CAACC,MAAM,EAAEC,KAAK,KAAK,IAAI,CAACb,OAAO,CAAC,sBAAsBY,MAAM,UAAUC,KAAK,EAAE,EAAE;MAAEH,MAAM,EAAE;IAAO,CAAC,CAAC;IAAA,KAC7GI,SAAS,GAAG,CAACF,MAAM,EAAEC,KAAK,KAAK,IAAI,CAACb,OAAO,CAAC,uBAAuBY,MAAM,UAAUC,KAAK,EAAE,EAAE;MAAEH,MAAM,EAAE;IAAO,CAAC,CAAC;IAE/G;IAAA,KACAK,eAAe,GAAG,MAAM,IAAI,CAACf,OAAO,CAAC,iBAAiB,CAAC;EAAA;EAnCvD,MAAMA,OAAOA,CAACgB,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACpC,MAAMC,GAAG,GAAG,GAAGtB,YAAY,GAAGoB,QAAQ,EAAE;IACxC,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGH,OAAO,CAACG;MACb,CAAC;MACD,GAAGH;IACL,CAAC;IAED,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,MAAM,CAAC;MACzC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBX,QAAQ,EAAE,EAAEW,KAAK,CAAC;MACvD,MAAMA,KAAK;IACb;EACF;AAgBF;AAEA,OAAO,MAAME,GAAG,GAAG,IAAIhC,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}